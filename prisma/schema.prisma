// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}

enum Role {
  superAdmin
  admin
  user
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  role     Role   @default(user)

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  Feedback Feedback[]
}

model Product {
  id            String     @id @default(uuid())
  title         String
  slug          String     @unique
  image         String?
  public_id     String?
  averageRating Float?     @default(0)
  totalRatings  Int        @default(0)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Feedback      Feedback[]
}

enum FeedbackType {
  rating
  comment
}

model Feedback {
  id        String       @id @default(uuid())
  type      FeedbackType
  rating    Int?
  comment   String?      @db.Text
  isPending Boolean?     @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  productId String

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([type, userId, productId], name: "type_userId_productId")
  @@index([productId])
  @@index([userId])
}
